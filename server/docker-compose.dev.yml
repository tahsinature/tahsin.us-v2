version: '3.8'

services:
  database:
    container_name: database
    image: mongo:4.2.7
    ports:
      - 27017:27017
    volumes:
      - ./data/dev/mongo:/data/db
    networks:
      - backend

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - ./data/dev/redis:/data
    command: ['redis-server', '--bind', 'redis', '--port', '6379']
    networks:
      - backend

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - transport.host=0.0.0.0
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - backend

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    depends_on:
      - elasticsearch
    volumes:
      - kibana:/usr/share/kibana/data
    environment:
      ELASTICSEARCH_HOST_PORT: localhost:9200
    ports:
      - 5601:5601
    networks:
      - backend

  backend:
    container_name: api
    build:
      context: .
      dockerfile: custom.dev.dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - '3001:3001'
    env_file: .env
    environment:
      ELASTICSEARCH_HOST: http://elasticsearch:9200
      MONGO_URL: mongodb://database:27017/me
      REDIS_HOST: redis
    depends_on:
      - database
      - redis
      # - kibana
      # - elasticsearch
    networks:
      - backend

volumes:
  database:
  elasticsearch:
  kibana:

networks:
  backend:
    driver: bridge
